<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\X2445-AT32F421-Ä£ÄâÒ¡¸Ë.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\X2445-AT32F421-Ä£ÄâÒ¡¸Ë.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Wed Oct 05 15:37:47 2022
<BR><P>
<H3>Maximum Stack Usage =       1252 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; vCheckSystemInfo &rArr; ucCheckMotoConnect &rArr; vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[3f]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[19]">ADC_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">ADC_COMP_IRQHandler</a><BR>
 <LI><a href="#[8]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">BusFault_Handler</a><BR>
 <LI><a href="#[4c]">assert_failed</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4c]">assert_failed</a><BR>
 <LI><a href="#[6]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">HardFault_Handler</a><BR>
 <LI><a href="#[7]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">MemManage_Handler</a><BR>
 <LI><a href="#[9]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">UsageFault_Handler</a><BR>
 <LI><a href="#[a5]">vShowErroToDis</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ac]">vAnalyTeacherDataOfTime</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[19]">ADC_COMP_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[8]">BusFault_Handler</a> from at32f4xx_it.o(i.BusFault_Handler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[16]">DMA1_Channel1_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_2_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[18]">DMA1_Channel7_4_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[b]">DebugMon_Handler</a> from at32f4xx_it.o(i.DebugMon_Handler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[10]">ERTC_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[15]">EXTI15_4_IRQHandler</a> from at32f4xx_it.o(i.EXTI15_4_IRQHandler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[13]">EXTI1_0_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[14]">EXTI3_2_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[11]">FLASH_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[6]">HardFault_Handler</a> from at32f4xx_it.o(i.HardFault_Handler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[28]">I2C1_ER_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[22]">I2C1_EV_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[29]">I2C2_ER_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[23]">I2C2_EV_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[7]">MemManage_Handler</a> from at32f4xx_it.o(i.MemManage_Handler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[5]">NMI_Handler</a> from at32f4xx_it.o(i.NMI_Handler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[f]">PVD_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[c]">PendSV_Handler</a> from at32f4xx_it.o(i.PendSV_Handler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[12]">RCC_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[4]">Reset_Handler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[24]">SPI1_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[25]">SPI2_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[a]">SVC_Handler</a> from at32f4xx_it.o(i.SVC_Handler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[d]">SysTick_Handler</a> from at32f4xx_it.o(i.SysTick_Handler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[2a]">SystemInit</a> from system_at32f4xx.o(i.SystemInit) referenced from startup_at32f421c8t7.o(.text)
 <LI><a href="#[1e]">TMR14_GLOBAL_IRQHandler</a> from at32f4xx_it.o(i.TMR14_GLOBAL_IRQHandler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[1f]">TMR15_GLOBAL_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[20]">TMR16_GLOBAL_IRQHandler</a> from at32f4xx_it.o(i.TMR16_GLOBAL_IRQHandler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[21]">TMR17_GLOBAL_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[1a]">TMR1_BRK_UP_TRG_COM_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[1b]">TMR1_CC_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[1c]">TMR3_GLOBAL_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[1d]">TMR6_GLOBAL_IRQHandler</a> from at32f4xx_it.o(i.TMR6_GLOBAL_IRQHandler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[26]">USART1_IRQHandler</a> from at32f4xx_it.o(i.USART1_IRQHandler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[27]">USART2_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[9]">UsageFault_Handler</a> from at32f4xx_it.o(i.UsageFault_Handler) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[e]">WWDG_IRQHandler</a> from startup_at32f421c8t7.o(.text) referenced from startup_at32f421c8t7.o(RESET)
 <LI><a href="#[2c]">__main</a> from __main.o(!!!main) referenced from startup_at32f421c8t7.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2c]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2d]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2f]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[109]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[10a]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[10b]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[10c]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[10d]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[33]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[10e]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[10f]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[110]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[111]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[112]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[113]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[114]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[115]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[116]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[117]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[118]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[119]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[11a]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[11b]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[11c]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[11d]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[11e]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[11f]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[120]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[121]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[122]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[38]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[123]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[124]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[125]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[126]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[127]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[128]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[129]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[2e]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[12a]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[30]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[32]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[12b]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[34]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; vCheckSystemInfo &rArr; ucCheckMotoConnect &rArr; vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[12c]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[40]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[37]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[12d]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[39]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[4]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>ADC_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel7_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ERTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI3_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TMR15_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TMR17_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TMR1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TMR1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TMR3_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421c8t7.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_at32f421c8t7.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[12e]"></a>_ll_udiv</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckSystemInfo
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
</UL>

<P><STRONG><a name="[12f]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[130]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[131]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uiInDownSpeedCalcMotoSate
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucCheckMotoConnect
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM3_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM1_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM15_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendTeacherFeedBack
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSysPower
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSingleOrder
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendOneByteOrder
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendMultBytesTeacherOrder
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendMultBytesOrder
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendFeedBack
</UL>

<P><STRONG><a name="[132]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[133]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[134]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[135]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[136]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[3d]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[3c]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[138]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[139]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[13a]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[13b]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[36]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[3a]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[13c]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[13d]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[13e]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>ADC_Ctrl</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, at32f4xx_adc.o(i.ADC_Ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_Ctrl
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Mode_Config
</UL>

<P><STRONG><a name="[46]"></a>ADC_DMACtrl</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, at32f4xx_adc.o(i.ADC_DMACtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_DMACtrl
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Mode_Config
</UL>

<P><STRONG><a name="[4b]"></a>ADC_GetCalibrationStatus</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, at32f4xx_adc.o(i.ADC_GetCalibrationStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_GetCalibrationStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Mode_Config
</UL>

<P><STRONG><a name="[49]"></a>ADC_GetResetCalibrationStatus</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, at32f4xx_adc.o(i.ADC_GetResetCalibrationStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_GetResetCalibrationStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Mode_Config
</UL>

<P><STRONG><a name="[44]"></a>ADC_Init</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, at32f4xx_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Mode_Config
</UL>

<P><STRONG><a name="[45]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 280 bytes, Stack size 24 bytes, at32f4xx_adc.o(i.ADC_RegularChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Mode_Config
</UL>

<P><STRONG><a name="[48]"></a>ADC_RstCalibration</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, at32f4xx_adc.o(i.ADC_RstCalibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_RstCalibration
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Mode_Config
</UL>

<P><STRONG><a name="[4d]"></a>ADC_SoftwareStartConvCtrl</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, at32f4xx_adc.o(i.ADC_SoftwareStartConvCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_SoftwareStartConvCtrl
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysTemSourceAsActive
</UL>

<P><STRONG><a name="[4a]"></a>ADC_StartCalibration</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, at32f4xx_adc.o(i.ADC_StartCalibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_StartCalibration
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Mode_Config
</UL>

<P><STRONG><a name="[43]"></a>ADC_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_adc.o(i.ADC_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Mode_Config
</UL>

<P><STRONG><a name="[8]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA_ChannelEnable</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, at32f4xx_dma.o(i.DMA_ChannelEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_ChannelEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucUsartDmaSendData
</UL>

<P><STRONG><a name="[4f]"></a>DMA_Configuration</STRONG> (Thumb, 80 bytes, Stack size 56 bytes, driverinit.o(i.DMA_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DMA_Configuration &rArr; DMA_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Reset
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DefaultInitParaConfig
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ChannelEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysTemSourceAsActive
</UL>

<P><STRONG><a name="[51]"></a>DMA_DefaultInitParaConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f4xx_dma.o(i.DMA_DefaultInitParaConfig))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
</UL>

<P><STRONG><a name="[52]"></a>DMA_Init</STRONG> (Thumb, 288 bytes, Stack size 16 bytes, at32f4xx_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
</UL>

<P><STRONG><a name="[50]"></a>DMA_Reset</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, at32f4xx_dma.o(i.DMA_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
</UL>

<P><STRONG><a name="[b]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI15_4_IRQHandler</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, at32f4xx_it.o(i.EXTI15_4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = EXTI15_4_IRQHandler &rArr; vSendSingleOrder &rArr; ucUsartDmaSendData &rArr; DMA_ChannelEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSingleOrder
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucTeacherPortRevByte
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetIntStatus
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearIntPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>EXTI_ClearIntPendingBit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, at32f4xx_exti.o(i.EXTI_ClearIntPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI_ClearIntPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_4_IRQHandler
</UL>

<P><STRONG><a name="[53]"></a>EXTI_GetIntStatus</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, at32f4xx_exti.o(i.EXTI_GetIntStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI_GetIntStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_4_IRQHandler
</UL>

<P><STRONG><a name="[58]"></a>EXTI_Init</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, at32f4xx_exti.o(i.EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSetTeacherPortInt
</UL>

<P><STRONG><a name="[e3]"></a>EXTI_StructInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at32f4xx_exti.o(i.EXTI_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSetTeacherPortInt
</UL>

<P><STRONG><a name="[59]"></a>GPIO_Init</STRONG> (Thumb, 324 bytes, Stack size 32 bytes, at32f4xx_gpio_ex.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitPortAsWaiteMode
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitPortAsActive
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM3_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM1_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM15_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
</UL>

<P><STRONG><a name="[5a]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, at32f4xx_gpio_ex.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM3_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM1_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM15_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
</UL>

<P><STRONG><a name="[5b]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, at32f4xx_gpio_ex.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_ReadInputDataBit
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vShowPoweChange
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckHardWareErro
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vNoKeyInStandbyMode
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vConfigSysInStandbyMode
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckSystemInfo
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vShowErroToDis
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMotorTest
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInternSpeekTest
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vExternSpeekTest
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vBreakTest
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucTeacherPortRevByte
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR16_GLOBAL_IRQHandler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>GPIO_ResetBits</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, at32f4xx_gpio_ex.o(i.GPIO_ResetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_ResetBits
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckHardWareErro
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vNoKeyInStandbyMode
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitPortAsWaiteMode
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitPortAsActive
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckSystemInfo
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucCheckMotoConnect
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vShowErroToDis
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTeacherPortSendByte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSingleOrder
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMotorTest
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDriverTest
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vBreakTest
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherDataOfTime
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherData
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalySerialData
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_4_IRQHandler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>GPIO_SetBits</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, at32f4xx_gpio_ex.o(i.GPIO_SetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_SetBits
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vNoKeyInStandbyMode
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitPortAsActive
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckSystemInfo
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucCheckMotoConnect
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vShowErroToDis
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTeacherPortSendByte
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMotorTest
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDriverTest
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vBreakTest
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherDataOfTime
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalySerialData
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[d5]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f4xx_iwdg.o(i.IWDG_ReloadCounter))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vFeedIwdg
</UL>

<P><STRONG><a name="[5d]"></a>MCUDBG_PeriphDebugModeConfig</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, at32f4xx_dbgmcu.o(i.MCUDBG_PeriphDebugModeConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MCUDBG_PeriphDebugModeConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[7]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>NVIC_Init</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimeBaseInit
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSetTeacherPortInt
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
</UL>

<P><STRONG><a name="[5f]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_PriorityGroupConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[60]"></a>PWM_TIM15_Init</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, driverinit.o(i.PWM_TIM15_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = PWM_TIM15_Init &rArr; TMR_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseStructInit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OCStructInit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC2Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC1Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_CtrlPWMOutputs
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Cmd
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitTimer
</UL>

<P><STRONG><a name="[69]"></a>PWM_TIM1_Init</STRONG> (Thumb, 214 bytes, Stack size 56 bytes, driverinit.o(i.PWM_TIM1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = PWM_TIM1_Init &rArr; TMR_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseStructInit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OCStructInit
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC4Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC3Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC2Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC1Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_CtrlPWMOutputs
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Cmd
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitTimer
</UL>

<P><STRONG><a name="[6c]"></a>PWM_TIM3_Init</STRONG> (Thumb, 166 bytes, Stack size 56 bytes, driverinit.o(i.PWM_TIM3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = PWM_TIM3_Init &rArr; TMR_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseStructInit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OCStructInit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC2Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC1Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Cmd
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitTimer
</UL>

<P><STRONG><a name="[c]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[a6]"></a>PwmDataInit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, drivercontrol.o(i.PwmDataInit))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, at32f4xx_rcc.o(i.RCC_ADCCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_ADCCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Mode_Config
</UL>

<P><STRONG><a name="[6d]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, at32f4xx_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_AHBPeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitPortAsWaiteMode
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitPortAsActive
</UL>

<P><STRONG><a name="[6e]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, at32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_APB1PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimeBaseInit
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitPortAsActive
</UL>

<P><STRONG><a name="[6f]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, at32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_APB2PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimeBaseInit
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitPortAsActive
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
</UL>

<P><STRONG><a name="[88]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 336 bytes, Stack size 20 bytes, at32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[78]"></a>RCC_PLLFrefTableConfig</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, at32f4xx_rcc.o(i.RCC_PLLFrefTableConfig), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72M
</UL>

<P><STRONG><a name="[a]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>SYSCFG_EXTILineConfig</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, at32f4xx_syscfg.o(i.SYSCFG_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SYSCFG_EXTILineConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSetTeacherPortInt
</UL>

<P><STRONG><a name="[b7]"></a>SlopModeAdjus_Init</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drivercontrol.o(i.SlopModeAdjus_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SlopModeAdjus_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
</UL>

<P><STRONG><a name="[79]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, misc.o(i.SysTick_CLKSourceConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_CLKSourceConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitDelay
</UL>

<P><STRONG><a name="[d]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 258 bytes, Stack size 20 bytes, system_at32f4xx.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[2a]"></a>SystemInit</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, system_at32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(.text)
</UL>
<P><STRONG><a name="[7b]"></a>System_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, drivebsp.o(i.System_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = System_Init &rArr; bsp_InitDelay &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitDelay
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCUDBG_PeriphDebugModeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>TMR14_GLOBAL_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, at32f4xx_it.o(i.TMR14_GLOBAL_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TMR14_GLOBAL_IRQHandler &rArr; TMR_GetINTStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_GetINTStatus
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TMR16_GLOBAL_IRQHandler</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, at32f4xx_it.o(i.TMR16_GLOBAL_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TMR16_GLOBAL_IRQHandler &rArr; vDealAdcVaule &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDealAdcVaule
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckHardWareErro
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_GetINTStatus
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TMR6_GLOBAL_IRQHandler</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, at32f4xx_it.o(i.TMR6_GLOBAL_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = TMR6_GLOBAL_IRQHandler &rArr; vAnalyTeacherData &rArr; vSendMultBytesOrder &rArr; ucUsartDmaSendData &rArr; DMA_ChannelEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherData
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_GetINTStatus
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>TMR_ClearITPendingBit</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, at32f4xx_tim.o(i.TMR_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR_ClearITPendingBit
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_GLOBAL_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR16_GLOBAL_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR14_GLOBAL_IRQHandler
</UL>

<P><STRONG><a name="[67]"></a>TMR_Cmd</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, at32f4xx_tim.o(i.TMR_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimeBaseInit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM3_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM1_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM15_Init
</UL>

<P><STRONG><a name="[68]"></a>TMR_CtrlPWMOutputs</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, at32f4xx_tim.o(i.TMR_CtrlPWMOutputs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR_CtrlPWMOutputs
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM1_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM15_Init
</UL>

<P><STRONG><a name="[83]"></a>TMR_DIVConfig</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, at32f4xx_tim.o(i.TMR_DIVConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR_DIVConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimeBaseInit
</UL>

<P><STRONG><a name="[7e]"></a>TMR_GetINTStatus</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, at32f4xx_tim.o(i.TMR_GetINTStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR_GetINTStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_GLOBAL_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR16_GLOBAL_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR14_GLOBAL_IRQHandler
</UL>

<P><STRONG><a name="[84]"></a>TMR_INTConfig</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, at32f4xx_tim.o(i.TMR_INTConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR_INTConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimeBaseInit
</UL>

<P><STRONG><a name="[65]"></a>TMR_OC1Init</STRONG> (Thumb, 326 bytes, Stack size 40 bytes, at32f4xx_tim.o(i.TMR_OC1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TMR_OC1Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM3_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM1_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM15_Init
</UL>

<P><STRONG><a name="[66]"></a>TMR_OC2Init</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, at32f4xx_tim.o(i.TMR_OC2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TMR_OC2Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM3_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM1_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM15_Init
</UL>

<P><STRONG><a name="[6a]"></a>TMR_OC3Init</STRONG> (Thumb, 306 bytes, Stack size 40 bytes, at32f4xx_tim.o(i.TMR_OC3Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TMR_OC3Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM1_Init
</UL>

<P><STRONG><a name="[6b]"></a>TMR_OC4Init</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, at32f4xx_tim.o(i.TMR_OC4Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TMR_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM1_Init
</UL>

<P><STRONG><a name="[64]"></a>TMR_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f4xx_tim.o(i.TMR_OCStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM3_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM1_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM15_Init
</UL>

<P><STRONG><a name="[63]"></a>TMR_TimeBaseInit</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, at32f4xx_tim.o(i.TMR_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TMR_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimeBaseInit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM3_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM1_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM15_Init
</UL>

<P><STRONG><a name="[62]"></a>TMR_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f4xx_tim.o(i.TMR_TimeBaseStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimeBaseInit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM3_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM1_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM15_Init
</UL>

<P><STRONG><a name="[26]"></a>USART1_IRQHandler</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, at32f4xx_it.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = USART1_IRQHandler &rArr; vAnalySerialData &rArr; vSendFeedBack &rArr; ucUsartDmaSendData &rArr; DMA_ChannelEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalySerialData
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>USART_ClearFlag</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, at32f4xx_usart.o(i.USART_ClearFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART_ClearFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[75]"></a>USART_Cmd</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, at32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
</UL>

<P><STRONG><a name="[76]"></a>USART_DMACmd</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, at32f4xx_usart.o(i.USART_DMACmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_DMACmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
</UL>

<P><STRONG><a name="[85]"></a>USART_GetFlagStatus</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, at32f4xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[73]"></a>USART_INTConfig</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, at32f4xx_usart.o(i.USART_INTConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART_INTConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
</UL>

<P><STRONG><a name="[74]"></a>USART_Init</STRONG> (Thumb, 340 bytes, Stack size 48 bytes, at32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USART_Init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
</UL>

<P><STRONG><a name="[86]"></a>USART_ReceiveData</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, at32f4xx_usart.o(i.USART_ReceiveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[9]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421c8t7.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[8a]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[8d]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[8f]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[91]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[92]"></a>asin</STRONG> (Thumb, 572 bytes, Stack size 56 bytes, asin.o(i.asin))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = asin &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
</UL>

<P><STRONG><a name="[4c]"></a>assert_failed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, drivermain.o(i.assert_failed))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INTConfig
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseInit
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC4Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC3Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC2Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_OC1Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_INTConfig
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_DIVConfig
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_CtrlPWMOutputs
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Cmd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADCCLKConfig
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Reset
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartCalibration
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCtrl
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RstCalibration
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetResetCalibrationStatus
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationStatus
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACtrl
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Ctrl
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ChannelEnable
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_GetINTStatus
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ClearITPendingBit
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetIntStatus
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearIntPendingBit
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCUDBG_PeriphDebugModeConfig
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>

<P><STRONG><a name="[97]"></a>bsp_DelayUS</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, drivedelay.o(i.bsp_DelayUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_DelayUS &rArr; __aeabi_f2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTeacherPortSendByte
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucTeacherPortRevByte
</UL>

<P><STRONG><a name="[7d]"></a>bsp_InitDelay</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, drivedelay.o(i.bsp_InitDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_InitDelay &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[35]"></a>main</STRONG> (Thumb, 608 bytes, Stack size 0 bytes, drivermain.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = main &rArr; vCheckSystemInfo &rArr; ucCheckMotoConnect &rArr; vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vShowPoweChange
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vContolRealize
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCalcBataAsShow
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoSlopeStopFuction
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucPowerOnCotrol
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmDataInit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysTemSourceAsActive
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSetTeacherPortInt
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vNoKeyInStandbyMode
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitPortAsWaiteMode
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckSystemInfo
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vShowErroToDis
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSysPower
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSingleOrder
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherDataOfTime
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[95]"></a>sqrt</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[b2]"></a>ucCalcDirection</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, drivercontrol.o(i.ucCalcDirection))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vContolRealize
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucRunChangeDirDeal
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDownSpeedCalcPwm
</UL>

<P><STRONG><a name="[af]"></a>ucCheckMotoConnect</STRONG> (Thumb, 1848 bytes, Stack size 680 bytes, driverinit.o(i.ucCheckMotoConnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 1188<LI>Call Chain = ucCheckMotoConnect &rArr; vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDealAdcVauleMotoAndCurrent
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckSystemInfo
</UL>

<P><STRONG><a name="[9f]"></a>ucPowerOnCotrol</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, drivercontrol.o(i.ucPowerOnCotrol))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ucPowerOnCotrol &rArr; vSendSingleOrder &rArr; ucUsartDmaSendData &rArr; DMA_ChannelEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSingleOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b1]"></a>ucRunChangeDirDeal</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, drivercontrol.o(i.ucRunChangeDirDeal))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = ucRunChangeDirDeal &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucCalcDirection
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDownSpeedCalcPwm
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vContolRealize
</UL>

<P><STRONG><a name="[55]"></a>ucTeacherPortRevByte</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, driveruart.o(i.ucTeacherPortRevByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ucTeacherPortRevByte &rArr; bsp_DelayUS &rArr; __aeabi_f2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_4_IRQHandler
</UL>

<P><STRONG><a name="[b4]"></a>ucUsartDmaSendData</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, driveruart.o(i.ucUsartDmaSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ucUsartDmaSendData &rArr; DMA_ChannelEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ChannelEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSysPower
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSingleOrder
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendOneByteOrder
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendMultBytesOrder
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendFeedBack
</UL>

<P><STRONG><a name="[b5]"></a>uiInDownSpeedCalcMotoSate</STRONG> (Thumb, 386 bytes, Stack size 336 bytes, drivercontrol.o(i.uiInDownSpeedCalcMotoSate))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDealAdcVauleMotoAndCurrent
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDownSpeedCalcPwm
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
</UL>

<P><STRONG><a name="[b6]"></a>vAdjustPwmAtSlopModeFastAdjus</STRONG> (Thumb, 8550 bytes, Stack size 352 bytes, drivercontrol.o(i.vAdjustPwmAtSlopModeFastAdjus))
<BR><BR>[Stack]<UL><LI>Max Depth = 1188<LI>Call Chain = vAdjustPwmAtSlopModeFastAdjus &rArr; vAnalyTeacherDataOfTime &rArr; vSaveTeacherData &rArr; vReadSysTempPare &rArr; vReadEepromData &rArr; vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vShowPoweChange
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCalcBataAsShow
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucCalcDirection
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlopModeAdjus_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSysPower
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSingleOrder
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendOneByteOrder
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherDataOfTime
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoSlopeStopFuction
</UL>

<P><STRONG><a name="[87]"></a>vAnalySerialData</STRONG> (Thumb, 300 bytes, Stack size 40 bytes, driveruart.o(i.vAnalySerialData))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = vAnalySerialData &rArr; vSendFeedBack &rArr; ucUsartDmaSendData &rArr; DMA_ChannelEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendFeedBack
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[82]"></a>vAnalyTeacherData</STRONG> (Thumb, 462 bytes, Stack size 56 bytes, driveruart.o(i.vAnalyTeacherData))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = vAnalyTeacherData &rArr; vSendMultBytesOrder &rArr; ucUsartDmaSendData &rArr; DMA_ChannelEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDelay30us
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendTeacherFeedBack
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSingleOrder
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendMultBytesOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_GLOBAL_IRQHandler
</UL>

<P><STRONG><a name="[ac]"></a>vAnalyTeacherDataOfTime</STRONG> (Thumb, 296 bytes, Stack size 24 bytes, driveruart.o(i.vAnalyTeacherDataOfTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 836<LI>Call Chain = vAnalyTeacherDataOfTime &rArr; vSaveTeacherData &rArr; vReadSysTempPare &rArr; vReadEepromData &rArr; vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vShowErroToDis
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendMultBytesTeacherOrder
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSaveTeacherData
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMotorTest
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInternSpeekTest
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vExternSpeekTest
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDriverTest
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vBreakTest
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vShowErroToDis
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a2]"></a>vAutoPowerOffTimeFlag</STRONG> (Thumb, 1192 bytes, Stack size 56 bytes, drivercontrol.o(i.vAutoPowerOffTimeFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uiInDownSpeedCalcMotoSate
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSoftDelayms
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vConfigSysInStandbyMode
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDownSpeedCalcPwm
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSysPower
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSingleOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadEepromData
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckSystemInfo
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucCheckMotoConnect
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vShowErroToDis
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMotorTest
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInternSpeekTest
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vExternSpeekTest
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vBreakTest
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ad]"></a>vAutoSlopeStopFuction</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, drivercontrol.o(i.vAutoSlopeStopFuction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1188<LI>Call Chain = vAutoSlopeStopFuction &rArr; vAdjustPwmAtSlopModeFastAdjus &rArr; vAnalyTeacherDataOfTime &rArr; vSaveTeacherData &rArr; vReadSysTempPare &rArr; vReadEepromData &rArr; vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c7]"></a>vBreakTest</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, driveruart.o(i.vBreakTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = vBreakTest &rArr; vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendOneByteOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherDataOfTime
</UL>

<P><STRONG><a name="[ab]"></a>vCalcBataAsShow</STRONG> (Thumb, 344 bytes, Stack size 24 bytes, drivercontrol.o(i.vCalcBataAsShow))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = vCalcBataAsShow &rArr; vSendSysPower &rArr; ucUsartDmaSendData &rArr; DMA_ChannelEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSysPower
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>vCheckHardWareErro</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, drivercontrol.o(i.vCheckHardWareErro))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vCheckHardWareErro &rArr; GPIO_ResetBits
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR16_GLOBAL_IRQHandler
</UL>

<P><STRONG><a name="[a3]"></a>vCheckSystemInfo</STRONG> (Thumb, 1290 bytes, Stack size 64 bytes, driverinit.o(i.vCheckSystemInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = vCheckSystemInfo &rArr; ucCheckMotoConnect &rArr; vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucCheckMotoConnect
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSysPower
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSingleOrder
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendMultBytesOrder
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cb]"></a>vConfigSysInStandbyMode</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, driverinit.o(i.vConfigSysInStandbyMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = vConfigSysInStandbyMode &rArr; vSendSingleOrder &rArr; ucUsartDmaSendData &rArr; DMA_ChannelEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitWatchDog
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSingleOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
</UL>

<P><STRONG><a name="[aa]"></a>vContolRealize</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, drivercontrol.o(i.vContolRealize))
<BR><BR>[Stack]<UL><LI>Max Depth = 684<LI>Call Chain = vContolRealize &rArr; vRunMotor &rArr; vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucRunChangeDirDeal
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucCalcDirection
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDownSpeedCalcPwm
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSingleOrder
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendOneByteOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>vDealAdcVaule</STRONG> (Thumb, 944 bytes, Stack size 40 bytes, drivercontrol.o(i.vDealAdcVaule))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vDealAdcVaule &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR16_GLOBAL_IRQHandler
</UL>

<P><STRONG><a name="[b0]"></a>vDealAdcVauleMotoAndCurrent</STRONG> (Thumb, 378 bytes, Stack size 20 bytes, drivercontrol.o(i.vDealAdcVauleMotoAndCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uiInDownSpeedCalcMotoSate
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucCheckMotoConnect
</UL>

<P><STRONG><a name="[c0]"></a>vDelay30us</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, drivercontrol.o(i.vDelay30us))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSoftDelayms
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDownSpeedCalcPwm
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherData
</UL>

<P><STRONG><a name="[e0]"></a>vDelay30usAcc</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, drivercontrol.o(i.vDelay30usAcc))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
</UL>

<P><STRONG><a name="[d1]"></a>vDelay30usBreak</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, drivercontrol.o(i.vDelay30usBreak))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDownSpeedCalcPwm
</UL>

<P><STRONG><a name="[d3]"></a>vDelayCom</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, driveruart.o(i.vDelayCom))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSysPower
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSingleOrder
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendOneByteOrder
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendMultBytesOrder
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vErroTimeTheach
</UL>

<P><STRONG><a name="[b3]"></a>vDownSpeedCalcPwm</STRONG> (Thumb, 1990 bytes, Stack size 96 bytes, drivercontrol.o(i.vDownSpeedCalcPwm))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDelay30usBreak
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uiInDownSpeedCalcMotoSate
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucCalcDirection
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDelay30us
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vShowPoweChange
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vContolRealize
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucRunChangeDirDeal
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMotorTest
</UL>

<P><STRONG><a name="[c4]"></a>vDriverTest</STRONG> (Thumb, 126 bytes, Stack size 56 bytes, driveruart.o(i.vDriverTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = vDriverTest &rArr; vMotorTest &rArr; vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendOneByteOrder
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMotorTest
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherDataOfTime
</UL>

<P><STRONG><a name="[d2]"></a>vErroTimeTheach</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, driveruart.o(i.vErroTimeTheach))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDelayCom
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendMultBytesTeacherOrder
</UL>

<P><STRONG><a name="[c6]"></a>vExternSpeekTest</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, driveruart.o(i.vExternSpeekTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = vExternSpeekTest &rArr; vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendOneByteOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherDataOfTime
</UL>

<P><STRONG><a name="[d4]"></a>vFeedIwdg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, driverinit.o(i.vFeedIwdg))
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendMultBytesTeacherOrder
</UL>

<P><STRONG><a name="[d6]"></a>vInitPortAsActive</STRONG> (Thumb, 518 bytes, Stack size 48 bytes, driverinit.o(i.vInitPortAsActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = vInitPortAsActive &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysTemSourceAsActive
</UL>

<P><STRONG><a name="[9c]"></a>vInitPortAsWaiteMode</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, driverinit.o(i.vInitPortAsWaiteMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = vInitPortAsWaiteMode &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7]"></a>vInitTimer</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, driverinit.o(i.vInitTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = vInitTimer &rArr; PWM_TIM3_Init &rArr; TMR_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimeBaseInit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM3_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM1_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_TIM15_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysTemSourceAsActive
</UL>

<P><STRONG><a name="[cf]"></a>vInitWatchDog</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, driverinit.o(i.vInitWatchDog))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vConfigSysInStandbyMode
</UL>

<P><STRONG><a name="[c5]"></a>vInternSpeekTest</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, driveruart.o(i.vInternSpeekTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = vInternSpeekTest &rArr; vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendOneByteOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherDataOfTime
</UL>

<P><STRONG><a name="[c3]"></a>vMotorTest</STRONG> (Thumb, 368 bytes, Stack size 40 bytes, driveruart.o(i.vMotorTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = vMotorTest &rArr; vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDownSpeedCalcPwm
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendOneByteOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDriverTest
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherDataOfTime
</UL>

<P><STRONG><a name="[9d]"></a>vNoKeyInStandbyMode</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, driverinit.o(i.vNoKeyInStandbyMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = vNoKeyInStandbyMode &rArr; GPIO_SetBits
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSoftDelayms
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d9]"></a>vReadEepromData</STRONG> (Thumb, 394 bytes, Stack size 40 bytes, driverinit.o(i.vReadEepromData))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = vReadEepromData &rArr; vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSingleOrder
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendMultBytesOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
</UL>

<P><STRONG><a name="[a0]"></a>vReadSysTempPare</STRONG> (Thumb, 2954 bytes, Stack size 248 bytes, driverinit.o(i.vReadSysTempPare))
<BR><BR>[Stack]<UL><LI>Max Depth = 796<LI>Call Chain = vReadSysTempPare &rArr; vReadEepromData &rArr; vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadEepromData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSingleOrder
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendOneByteOrder
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSaveTeacherData
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d0]"></a>vRunMotor</STRONG> (Thumb, 5434 bytes, Stack size 152 bytes, drivercontrol.o(i.vRunMotor))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = vRunMotor &rArr; vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDelay30usAcc
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCalcBataAsShow
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucCalcDirection
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDownSpeedCalcPwm
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDelay30us
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSingleOrder
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vContolRealize
</UL>

<P><STRONG><a name="[c8]"></a>vSaveTeacherData</STRONG> (Thumb, 248 bytes, Stack size 16 bytes, driveruart.o(i.vSaveTeacherData))
<BR><BR>[Stack]<UL><LI>Max Depth = 812<LI>Call Chain = vSaveTeacherData &rArr; vReadSysTempPare &rArr; vReadEepromData &rArr; vAutoPowerOffTimeFlag &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendOneByteOrder
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendMultBytesOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherDataOfTime
</UL>

<P><STRONG><a name="[bf]"></a>vSendFeedBack</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, driveruart.o(i.vSendFeedBack))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = vSendFeedBack &rArr; ucUsartDmaSendData &rArr; DMA_ChannelEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucUsartDmaSendData
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalySerialData
</UL>

<P><STRONG><a name="[c2]"></a>vSendMultBytesOrder</STRONG> (Thumb, 206 bytes, Stack size 112 bytes, driveruart.o(i.vSendMultBytesOrder))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = vSendMultBytesOrder &rArr; ucUsartDmaSendData &rArr; DMA_ChannelEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDelayCom
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucUsartDmaSendData
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadEepromData
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckSystemInfo
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vShowErroToDis
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSaveTeacherData
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherData
</UL>

<P><STRONG><a name="[c9]"></a>vSendMultBytesTeacherOrder</STRONG> (Thumb, 204 bytes, Stack size 112 bytes, driveruart.o(i.vSendMultBytesTeacherOrder))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = vSendMultBytesTeacherOrder &rArr; vTeacherPortSendByte &rArr; bsp_DelayUS &rArr; __aeabi_f2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vFeedIwdg
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTeacherPortSendByte
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSetTeacherPortType
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vErroTimeTheach
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherDataOfTime
</UL>

<P><STRONG><a name="[b9]"></a>vSendOneByteOrder</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, driveruart.o(i.vSendOneByteOrder))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = vSendOneByteOrder &rArr; ucUsartDmaSendData &rArr; DMA_ChannelEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDelayCom
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucUsartDmaSendData
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vContolRealize
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vShowErroToDis
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSaveTeacherData
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vMotorTest
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInternSpeekTest
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vExternSpeekTest
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDriverTest
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vBreakTest
</UL>

<P><STRONG><a name="[54]"></a>vSendSingleOrder</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, driveruart.o(i.vSendSingleOrder))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = vSendSingleOrder &rArr; ucUsartDmaSendData &rArr; DMA_ChannelEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDelayCom
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucUsartDmaSendData
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vShowPoweChange
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vContolRealize
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucPowerOnCotrol
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadEepromData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vConfigSysInStandbyMode
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckSystemInfo
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vShowErroToDis
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherData
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_4_IRQHandler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>vSendSysPower</STRONG> (Thumb, 414 bytes, Stack size 56 bytes, driveruart.o(i.vSendSysPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = vSendSysPower &rArr; ucUsartDmaSendData &rArr; DMA_ChannelEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDelayCom
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucUsartDmaSendData
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCalcBataAsShow
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckSystemInfo
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c1]"></a>vSendTeacherFeedBack</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, driveruart.o(i.vSendTeacherFeedBack))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = vSendTeacherFeedBack &rArr; vTeacherPortSendByte &rArr; bsp_DelayUS &rArr; __aeabi_f2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTeacherPortSendByte
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSetTeacherPortType
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherData
</UL>

<P><STRONG><a name="[a4]"></a>vSetTeacherPortInt</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, driverinit.o(i.vSetTeacherPortInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = vSetTeacherPortInt &rArr; SYSCFG_EXTILineConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_StructInit
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysTemSourceAsActive
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e1]"></a>vSetTeacherPortType</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, driveruart.o(i.vSetTeacherPortType))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendTeacherFeedBack
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendMultBytesTeacherOrder
</UL>

<P><STRONG><a name="[a5]"></a>vShowErroToDis</STRONG> (Thumb, 360 bytes, Stack size 40 bytes, driverinit.o(i.vShowErroToDis))
<BR><BR>[Stack]<UL><LI>Max Depth = 548 + In Cycle
<LI>Call Chain = vShowErroToDis &rArr;  vAnalyTeacherDataOfTime (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSingleOrder
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendOneByteOrder
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendMultBytesOrder
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherDataOfTime
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAnalyTeacherDataOfTime
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>vShowPoweChange</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, drivercontrol.o(i.vShowPoweChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = vShowPoweChange &rArr; vDownSpeedCalcPwm &rArr; uiInDownSpeedCalcMotoSate &rArr; vDealAdcVauleMotoAndCurrent
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDownSpeedCalcPwm
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSingleOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ca]"></a>vSoftDelayms</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, drivercontrol.o(i.vSoftDelayms))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vSoftDelayms
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDelay30us
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vNoKeyInStandbyMode
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAutoPowerOffTimeFlag
</UL>

<P><STRONG><a name="[9e]"></a>vSysTemSourceAsActive</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, driverinit.o(i.vSysTemSourceAsActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = vSysTemSourceAsActive &rArr; SetBaudrate &rArr; USART_Init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCtrl
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSetTeacherPortInt
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitTimer
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitPortAsActive
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaudrate
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Mode_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e2]"></a>vTeacherPortSendByte</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, driveruart.o(i.vTeacherPortSendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTeacherPortSendByte &rArr; bsp_DelayUS &rArr; __aeabi_f2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendTeacherFeedBack
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendMultBytesTeacherOrder
</UL>

<P><STRONG><a name="[d8]"></a>vTimeBaseInit</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, driverinit.o(i.vTimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = vTimeBaseInit &rArr; TMR_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseStructInit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_TimeBaseInit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_INTConfig
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_DIVConfig
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Cmd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitTimer
</UL>

<P><STRONG><a name="[bb]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCalcBataAsShow
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDownSpeedCalcPwm
</UL>

<P><STRONG><a name="[e4]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDealAdcVaule
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckSystemInfo
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[e7]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[ea]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[f0]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[90]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDownSpeedCalcPwm
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[ec]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[dd]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
</UL>

<P><STRONG><a name="[ed]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[ce]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDealAdcVaule
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckSystemInfo
</UL>

<P><STRONG><a name="[ee]"></a>_dfixu</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[da]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
</UL>

<P><STRONG><a name="[13f]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[a8]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDealAdcVaule
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCalcBataAsShow
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckSystemInfo
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDownSpeedCalcPwm
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[140]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[cc]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCalcBataAsShow
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckSystemInfo
</UL>

<P><STRONG><a name="[ef]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[f3]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[8b]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCalcBataAsShow
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckSystemInfo
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[f1]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[e6]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[e9]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[a9]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckSystemInfo
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f2]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[94]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[f4]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[ae]"></a>_dsqrt</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, dsqrt_umaal.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[96]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckSystemInfo
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[f6]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[bc]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
</UL>

<P><STRONG><a name="[f7]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[be]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCalcBataAsShow
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDownSpeedCalcPwm
</UL>

<P><STRONG><a name="[f9]"></a>_fadd</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[fb]"></a>__fpl_fcheck_NaN1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fcheck1.o(x$fpl$fcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>

<P><STRONG><a name="[fe]"></a>__fpl_fcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fcmpi.o(x$fpl$fcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
</UL>

<P><STRONG><a name="[9b]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitDelay
</UL>

<P><STRONG><a name="[fc]"></a>_fdiv</STRONG> (Thumb, 384 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[bd]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, feqf.o(x$fpl$feqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cfcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
</UL>

<P><STRONG><a name="[fd]"></a>_fcmpeq</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, feqf.o(x$fpl$feqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
</UL>

<P><STRONG><a name="[dc]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
</UL>

<P><STRONG><a name="[ff]"></a>_ffix</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[9a]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffixu.o(x$fpl$ffixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCalcBataAsShow
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDownSpeedCalcPwm
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
</UL>

<P><STRONG><a name="[100]"></a>_ffixu</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ffixu.o(x$fpl$ffixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[98]"></a>__aeabi_ui2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDownSpeedCalcPwm
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitDelay
</UL>

<P><STRONG><a name="[141]"></a>_ffltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu), UNUSED)

<P><STRONG><a name="[ba]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fleqf.o(x$fpl$fleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
</UL>

<P><STRONG><a name="[101]"></a>_fcmple</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
</UL>

<P><STRONG><a name="[104]"></a>__fpl_fcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDownSpeedCalcPwm
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitDelay
</UL>

<P><STRONG><a name="[102]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[f8]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
</UL>

<P><STRONG><a name="[e5]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
</UL>

<P><STRONG><a name="[b8]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAdjustPwmAtSlopModeFastAdjus
</UL>

<P><STRONG><a name="[103]"></a>_frcmple</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmple_InfNaN
</UL>

<P><STRONG><a name="[df]"></a>__aeabi_frsub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
</UL>

<P><STRONG><a name="[105]"></a>_frsb</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[db]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
</UL>

<P><STRONG><a name="[107]"></a>_fsub</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[eb]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[8e]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDealAdcVaule
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vReadSysTempPare
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[de]"></a>__ARM_scalbnf</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, scalbnf.o(x$fpl$scalbnf))
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRunMotor
</UL>

<P><STRONG><a name="[108]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[41]"></a>ADC1_Mode_Config</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, driverinit.o(i.ADC1_Mode_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ADC1_Mode_Config &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADCCLKConfig
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartCalibration
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RstCalibration
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetResetCalibrationStatus
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationStatus
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACtrl
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysTemSourceAsActive
</UL>

<P><STRONG><a name="[71]"></a>SetBaudrate</STRONG> (Thumb, 308 bytes, Stack size 104 bytes, driverinit.o(i.SetBaudrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = SetBaudrate &rArr; USART_Init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_INTConfig
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Reset
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DefaultInitParaConfig
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ChannelEnable
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysTemSourceAsActive
</UL>

<P><STRONG><a name="[7a]"></a>SetSysClock</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_at32f4xx.o(i.SetSysClock))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[77]"></a>SetSysClockTo72M</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, system_at32f4xx.o(i.SetSysClockTo72M), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLFrefTableConfig
</UL>

<P><STRONG><a name="[f5]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[e8]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[106]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
</UL>

<P><STRONG><a name="[fa]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
