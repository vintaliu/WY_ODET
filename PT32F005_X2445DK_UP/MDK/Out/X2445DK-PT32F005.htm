<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Out\X2445DK-PT32F005.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Out\X2445DK-PT32F005.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Sep 30 13:21:27 2022
<BR><P>
<H3>Maximum Stack Usage =        120 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; PeripheralHandle &rArr; PeripheralInputHandle &rArr; Peripheral_GPIOInput &rArr; vWrite60Bytes &rArr; vArom_WriteBytes_Fact &rArr; EEPROM_write_n &rArr; FLASH_ProgramWord &rArr; assert_failed &rArr; __2printf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[d]">Comparator0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">Comparator0_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">ADC_Handler</a> from pt32x005_it.o(i.ADC_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[7]">CLK_FAIL_Handler</a> from pt32x005_it.o(i.CLK_FAIL_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[d]">Comparator0_Handler</a> from startup_pt32x005x.o(RESET) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[e]">Comparator1_Handler</a> from pt32x005_it.o(i.Comparator1_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[f]">DAC_Handler</a> from pt32x005_it.o(i.DAC_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[8]">FLASH_Handler</a> from pt32x005_it.o(i.FLASH_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[16]">HIGH_LVD_Handler</a> from startup_pt32x005x.o(RESET) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from pt32x005_it.o(i.HardFault_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[18]">I2C0_Handler</a> from pt32x005_it.o(i.I2C0_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[19]">I2C1_Handler</a> from startup_pt32x005x.o(RESET) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[17]">LOW_LVD_Handler</a> from startup_pt32x005x.o(RESET) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from pt32x005_it.o(i.NMI_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[9]">PA_Handler</a> from pt32x005_it.o(i.PA_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[a]">PB_Handler</a> from pt32x005_it.o(i.PB_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[b]">PC_Handler</a> from pt32x005_it.o(i.PC_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[c]">PD_Handler</a> from pt32x005_it.o(i.PD_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from pt32x005_it.o(i.PendSV_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_pt32x005x.o(RESET) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[1a]">SPI0_Handler</a> from pt32x005_it.o(i.SPI0_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[1b]">SPI1_Handler</a> from pt32x005_it.o(i.SPI1_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from pt32x005_it.o(i.SVC_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from pt32x005_it.o(i.SysTick_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[1d]">SystemInit</a> from system_pt32x005.o(i.SystemInit) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[12]">TIMER0_Handler</a> from pt32x005_it.o(i.TIMER0_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[11]">TIMER1_Handler</a> from pt32x005_it.o(i.TIMER1_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[15]">TIMER2_Handler</a> from pt32x005_it.o(i.TIMER2_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[14]">TIMER3_Handler</a> from pt32x005_it.o(i.TIMER3_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[13]">TIMER4_Handler</a> from pt32x005_it.o(i.TIMER4_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[1c]">UART0_Handler</a> from pt32x005_it.o(i.UART0_Handler) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[6]">WWDG_Handler</a> from startup_pt32x005x.o(RESET) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[1e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_pt32x005x.o(RESET)
 <LI><a href="#[20]">fputc</a> from pt32x005_retarget.o(i.fputc) referenced from printf3.o(i.__0printf$3)
 <LI><a href="#[1f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_pt32x005x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>Comparator0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pt32x005x.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comparator0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Comparator0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>HIGH_LVD_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pt32x005x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pt32x005x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>LOW_LVD_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pt32x005x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_pt32x005x.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[21]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[25]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[77]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[78]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[79]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[7a]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[7b]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[7c]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeBaseInit
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_GetClocksFreq
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[7d]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[23]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralOutputHandle
</UL>

<P><STRONG><a name="[22]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[7e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>ADC_ChannelConfig</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, pt32x005_adc.o(i.ADC_ChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ADC_ChannelConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitAdc
</UL>

<P><STRONG><a name="[28]"></a>ADC_ClearFlag</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, pt32x005_adc.o(i.ADC_ClearFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ADC_ClearFlag &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDealAd
</UL>

<P><STRONG><a name="[29]"></a>ADC_Cmd</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, pt32x005_adc.o(i.ADC_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ADC_Cmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitAdc
</UL>

<P><STRONG><a name="[2a]"></a>ADC_GetConversionValue</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, pt32x005_adc.o(i.ADC_GetConversionValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ADC_GetConversionValue &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDealAd
</UL>

<P><STRONG><a name="[2b]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, pt32x005_adc.o(i.ADC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ADC_GetFlagStatus &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitAdc
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDealAd
</UL>

<P><STRONG><a name="[10]"></a>ADC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.ADC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>ADC_Init</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, pt32x005_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ADC_Init &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitAdc
</UL>

<P><STRONG><a name="[2d]"></a>ADC_SetSampleTime</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, pt32x005_adc.o(i.ADC_SetSampleTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ADC_SetSampleTime &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitAdc
</UL>

<P><STRONG><a name="[2e]"></a>ADC_StartOfConversion</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, pt32x005_adc.o(i.ADC_StartOfConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ADC_StartOfConversion &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitAdc
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDealAd
</UL>

<P><STRONG><a name="[73]"></a>ADC_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pt32x005_adc.o(i.ADC_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitAdc
</UL>

<P><STRONG><a name="[7]"></a>CLK_FAIL_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.CLK_FAIL_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>Comparator1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.Comparator1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DAC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.DAC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>EEPROM_WriteByte</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, x2445dk_eeprom_p32.o(i.EEPROM_WriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = EEPROM_WriteByte &rArr; FLASH_ProgramWord &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralOutputHandle
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DataProcess
</UL>

<P><STRONG><a name="[33]"></a>EEPROM_read_n</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, x2445dk_eeprom_p32.o(i.EEPROM_read_n))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EEPROM_read_n
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ReadWord
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckFactData
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vFirstStart
</UL>

<P><STRONG><a name="[35]"></a>EEPROM_write_n</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, x2445dk_eeprom_p32.o(i.EEPROM_write_n))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = EEPROM_write_n &rArr; FLASH_ProgramWord &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vArom_WriteBytes_Fact
</UL>

<P><STRONG><a name="[30]"></a>FLASH_ClearFlag</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, pt32x005_flash.o(i.FLASH_ClearFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FLASH_ClearFlag &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_write_n
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteByte
</UL>

<P><STRONG><a name="[31]"></a>FLASH_ErasePage</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, pt32x005_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FLASH_ErasePage &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_write_n
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteByte
</UL>

<P><STRONG><a name="[37]"></a>FLASH_GetStatus</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, pt32x005_flash.o(i.FLASH_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[8]"></a>FLASH_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.FLASH_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>FLASH_ProgramWord</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, pt32x005_flash.o(i.FLASH_ProgramWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FLASH_ProgramWord &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_write_n
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteByte
</UL>

<P><STRONG><a name="[34]"></a>FLASH_ReadWord</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pt32x005_flash.o(i.FLASH_ReadWord))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucReadEepromOneData
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_read_n
</UL>

<P><STRONG><a name="[36]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, pt32x005_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[38]"></a>GPIO_AnalogFunctionConfig</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, pt32x005_gpio.o(i.GPIO_AnalogFunctionConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_AnalogFunctionConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitAdc
</UL>

<P><STRONG><a name="[39]"></a>GPIO_Init</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, pt32x005_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_Init &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPT32
</UL>

<P><STRONG><a name="[3a]"></a>GPIO_InitPT32</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, x2445dk_init_p32.o(i.GPIO_InitPT32))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GPIO_InitPT32 &rArr; GPIO_PinAFConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysSourceInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DataProcess
</UL>

<P><STRONG><a name="[3c]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, pt32x005_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPIO_PinAFConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPT32
</UL>

<P><STRONG><a name="[3b]"></a>GPIO_ResetBits</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, pt32x005_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_ResetBits &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPT32
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTestShowLed
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedLedOn
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerLedOn
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerLedNumOn
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralOutputHandle
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DataProcess
</UL>

<P><STRONG><a name="[3e]"></a>GPIO_ReverseBits</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, pt32x005_gpio.o(i.GPIO_ReverseBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_ReverseBits &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerLedOn
</UL>

<P><STRONG><a name="[3d]"></a>GPIO_SetBits</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, pt32x005_gpio.o(i.GPIO_SetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_SetBits &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPT32
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTestShowLed
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedLedOn
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerLedOn
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerLedNumOn
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_GPIOInput
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralOutputHandle
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pt32x005_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.I2C0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>NVIC_Init</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, pt32x005_misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = NVIC_Init &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[9]"></a>PA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.PA_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PB_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.PB_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.PC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PD_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.PD_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>PMW_TimeBaseInit</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, pt32x005_pwm.o(i.PMW_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PMW_TimeBaseInit &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Init
</UL>

<P><STRONG><a name="[41]"></a>PWM1_Init</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, x2445dk_init_p32.o(i.PWM1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = PWM1_Init &rArr; GPIO_PinAFConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_OutputInit
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Cmd
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMW_TimeBaseInit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysSourceInit
</UL>

<P><STRONG><a name="[43]"></a>PWM_Cmd</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, pt32x005_pwm.o(i.PWM_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PWM_Cmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Init
</UL>

<P><STRONG><a name="[42]"></a>PWM_OutputInit</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, pt32x005_pwm.o(i.PWM_OutputInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PWM_OutputInit &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Init
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>PeripheralHandle</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, x2445dk_function_ptc32.o(i.PeripheralHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = PeripheralHandle &rArr; PeripheralInputHandle &rArr; Peripheral_GPIOInput &rArr; vWrite60Bytes &rArr; vArom_WriteBytes_Fact &rArr; EEPROM_write_n &rArr; FLASH_ProgramWord &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSpeakershutOut
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralOutputHandle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInputHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>PeripheralInputHandle</STRONG> (Thumb, 724 bytes, Stack size 8 bytes, x2445dk_function_ptc32.o(i.PeripheralInputHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = PeripheralInputHandle &rArr; Peripheral_GPIOInput &rArr; vWrite60Bytes &rArr; vArom_WriteBytes_Fact &rArr; EEPROM_write_n &rArr; FLASH_ProgramWord &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSpeedGrad
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendLedStatus
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendBuzzerOrder
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vWrite60Bytes
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedLedOn
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPWM1_Out
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_GPIOInput
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralHandle
</UL>

<P><STRONG><a name="[45]"></a>PeripheralOutputHandle</STRONG> (Thumb, 2542 bytes, Stack size 8 bytes, x2445dk_function_ptc32.o(i.PeripheralOutputHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = PeripheralOutputHandle &rArr; vWrite60Bytes &rArr; vArom_WriteBytes_Fact &rArr; EEPROM_write_n &rArr; FLASH_ProgramWord &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vWrite60Bytes
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTestShowLed
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedLedOn
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPWM1_Out
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerLedOn
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerLedNumOn
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteByte
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralHandle
</UL>

<P><STRONG><a name="[48]"></a>Peripheral_GPIOInput</STRONG> (Thumb, 954 bytes, Stack size 8 bytes, x2445dk_function_ptc32.o(i.Peripheral_GPIOInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Peripheral_GPIOInput &rArr; vWrite60Bytes &rArr; vArom_WriteBytes_Fact &rArr; EEPROM_write_n &rArr; FLASH_ProgramWord &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendLedStatus
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vWrite60Bytes
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedLedOn
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPWM1_Out
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInputHandle
</UL>

<P><STRONG><a name="[71]"></a>Peripheral_Init</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, x2445dk_function_ptc32.o(i.Peripheral_Init))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vFirstStart
</UL>

<P><STRONG><a name="[4f]"></a>PowerLedNumOn</STRONG> (Thumb, 288 bytes, Stack size 8 bytes, x2445dk_function_ptc32.o(i.PowerLedNumOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PowerLedNumOn &rArr; GPIO_SetBits &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralOutputHandle
</UL>

<P><STRONG><a name="[51]"></a>PowerLedOn</STRONG> (Thumb, 548 bytes, Stack size 8 bytes, x2445dk_function_ptc32.o(i.PowerLedOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PowerLedOn &rArr; GPIO_SetBits &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReverseBits
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPWM1_Out
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralOutputHandle
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DataProcess
</UL>

<P><STRONG><a name="[69]"></a>SERIAL_PutChar</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, pt32x005_serial.o(i.SERIAL_PutChar))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[1a]"></a>SPI0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.SPI0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.SPI1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SetPWM1_Out</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, x2445dk_function_ptc32.o(i.SetPWM1_Out))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSpeakershutOut
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerLedOn
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_GPIOInput
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralOutputHandle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInputHandle
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DataProcess
</UL>

<P><STRONG><a name="[4b]"></a>SpeedLedOn</STRONG> (Thumb, 260 bytes, Stack size 8 bytes, x2445dk_function_ptc32.o(i.SpeedLedOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SpeedLedOn &rArr; GPIO_SetBits &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_GPIOInput
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralOutputHandle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInputHandle
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DataProcess
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, pt32x005_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SysTick_Handler &rArr; vDealAd &rArr; ADC_GetFlagStatus &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vDealAd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SystemInit</STRONG> (Thumb, 76 bytes, Stack size 4 bytes, system_pt32x005.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystemInit &rArr; Wait_ClockReady
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_ClockReady
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>System_GetClocksFreq</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, pt32x005_sys.o(i.System_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = System_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[12]"></a>TIMER0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.TIMER0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIMER1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.TIMER1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIMER2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.TIMER2_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIMER3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.TIMER3_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIMER4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, pt32x005_it.o(i.TIMER4_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>TimeBaseInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, x2445dk_init_p32.o(i.TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TimeBaseInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysSourceInit
</UL>

<P><STRONG><a name="[1c]"></a>UART0_Handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, pt32x005_it.o(i.UART0_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART0_Handler &rArr; UART1_RecvData &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_RecvData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_pt32x005x.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>UART1_RecvData</STRONG> (Thumb, 358 bytes, Stack size 4 bytes, x2445dk_uart_p32.o(i.UART1_RecvData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART1_RecvData &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>

<P><STRONG><a name="[5a]"></a>UART1_SendByte</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, x2445dk_uart_p32.o(i.UART1_SendByte))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendString
</UL>

<P><STRONG><a name="[59]"></a>UART1_SendString</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, x2445dk_uart_p32.o(i.UART1_SendString))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART1_SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendOneBytes
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendFeedBack
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendDKVersion
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSend60Bytes
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSpeedGrad
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendLedStatus
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendBuzzerOrder
</UL>

<P><STRONG><a name="[5b]"></a>UART_Cmd</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, pt32x005_uart.o(i.UART_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_Cmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vWrite60Bytes
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DataProcess
</UL>

<P><STRONG><a name="[65]"></a>UART_FifoReset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, pt32x005_uart.o(i.UART_FifoReset))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[5c]"></a>UART_ITConfig</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, pt32x005_uart.o(i.UART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_ITConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[5d]"></a>UART_Init</STRONG> (Thumb, 386 bytes, Stack size 32 bytes, pt32x005_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = UART_Init &rArr; System_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_GetClocksFreq
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[5e]"></a>USART1_DataProcess</STRONG> (Thumb, 708 bytes, Stack size 16 bytes, x2445dk_uart_p32.o(i.USART1_DataProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USART1_DataProcess &rArr; GPIO_InitPT32 &rArr; GPIO_PinAFConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendOneBytes
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendFeedBack
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendDKVersion
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSend60Bytes
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPT32
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendSpeedGrad
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedLedOn
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPWM1_Out
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerLedOn
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>Uart_Init</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, x2445dk_init_p32.o(i.Uart_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Uart_Init &rArr; UART_Init &rArr; System_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ITConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_FifoReset
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysSourceInit
</UL>

<P><STRONG><a name="[54]"></a>Wait_ClockReady</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, system_pt32x005.o(i.Wait_ClockReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Wait_ClockReady
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[66]"></a>__0printf$3</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[7f]"></a>__1printf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)

<P><STRONG><a name="[68]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>

<P><STRONG><a name="[52]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, x2445dk_function_ptc32.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedLedOn
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerLedNumOn
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_RecvData
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DataProcess
</UL>

<P><STRONG><a name="[80]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[81]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[82]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[27]"></a>assert_failed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(i.assert_failed))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ITConfig
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_OutputInit
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Cmd
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMW_TimeBaseInit
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AnalogFunctionConfig
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SetSampleTime
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReverseBits
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartOfConversion
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ClearFlag
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>

<P><STRONG><a name="[6f]"></a>delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, x2445dk_function_ptc32.o(i.delay))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vFirstStart
</UL>

<P><STRONG><a name="[20]"></a>fputc</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, pt32x005_retarget.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SERIAL_PutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0printf$3)
</UL>
<P><STRONG><a name="[1f]"></a>main</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = main &rArr; PeripheralHandle &rArr; PeripheralInputHandle &rArr; Peripheral_GPIOInput &rArr; vWrite60Bytes &rArr; vArom_WriteBytes_Fact &rArr; EEPROM_write_n &rArr; FLASH_ProgramWord &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vFirstStart
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DataProcess
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[6b]"></a>ucReadEepromOneData</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, x2445dk_eeprom_p32.o(i.ucReadEepromOneData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ucReadEepromOneData
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ReadWord
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendOneBytes
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vFirstStart
</UL>

<P><STRONG><a name="[75]"></a>usReadSpeakerPwm</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, x2445dk_function_ptc32.o(i.usReadSpeakerPwm))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSpeakershutOut
</UL>

<P><STRONG><a name="[6c]"></a>vArom_WriteBytes_Fact</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, x2445dk_function_ptc32.o(i.vArom_WriteBytes_Fact))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = vArom_WriteBytes_Fact &rArr; EEPROM_write_n &rArr; FLASH_ProgramWord &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_write_n
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vWrite60Bytes
</UL>

<P><STRONG><a name="[6d]"></a>vCheckFactData</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, x2445dk_function_ptc32.o(i.vCheckFactData))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = vCheckFactData &rArr; EEPROM_read_n
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_read_n
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vFirstStart
</UL>

<P><STRONG><a name="[53]"></a>vDealAd</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, x2445dk_function_ptc32.o(i.vDealAd))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vDealAd &rArr; ADC_GetFlagStatus &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartOfConversion
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[6a]"></a>vFirstStart</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, x2445dk_function_ptc32.o(i.vFirstStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = vFirstStart &rArr; vSysSourceInit &rArr; Uart_Init &rArr; UART_Init &rArr; System_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysSourceInit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vCheckFactData
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucReadEepromOneData
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_read_n
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>vInitAdc</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, x2445dk_init_p32.o(i.vInitAdc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = vInitAdc &rArr; GPIO_AnalogFunctionConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AnalogFunctionConfig
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SetSampleTime
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartOfConversion
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSysSourceInit
</UL>

<P><STRONG><a name="[61]"></a>vSend60Bytes</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, x2445dk_uart_p32.o(i.vSend60Bytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vSend60Bytes &rArr; UART1_SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendString
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DataProcess
</UL>

<P><STRONG><a name="[4e]"></a>vSendBuzzerOrder</STRONG> (Thumb, 176 bytes, Stack size 20 bytes, x2445dk_uart_p32.o(i.vSendBuzzerOrder))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = vSendBuzzerOrder &rArr; UART1_SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendUartDelya
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendString
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSpeakershutOut
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInputHandle
</UL>

<P><STRONG><a name="[63]"></a>vSendDKVersion</STRONG> (Thumb, 110 bytes, Stack size 12 bytes, x2445dk_uart_p32.o(i.vSendDKVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = vSendDKVersion &rArr; UART1_SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendString
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DataProcess
</UL>

<P><STRONG><a name="[5f]"></a>vSendFeedBack</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, x2445dk_uart_p32.o(i.vSendFeedBack))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vSendFeedBack &rArr; UART1_SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendString
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DataProcess
</UL>

<P><STRONG><a name="[4c]"></a>vSendLedStatus</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, x2445dk_uart_p32.o(i.vSendLedStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vSendLedStatus &rArr; UART1_SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendString
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_GPIOInput
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInputHandle
</UL>

<P><STRONG><a name="[62]"></a>vSendOneBytes</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, x2445dk_uart_p32.o(i.vSendOneBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vSendOneBytes &rArr; UART1_SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendString
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucReadEepromOneData
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DataProcess
</UL>

<P><STRONG><a name="[4d]"></a>vSendSpeedGrad</STRONG> (Thumb, 110 bytes, Stack size 12 bytes, x2445dk_uart_p32.o(i.vSendSpeedGrad))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = vSendSpeedGrad &rArr; UART1_SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendString
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInputHandle
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DataProcess
</UL>

<P><STRONG><a name="[74]"></a>vSendUartDelya</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, x2445dk_uart_p32.o(i.vSendUartDelya))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendBuzzerOrder
</UL>

<P><STRONG><a name="[47]"></a>vSpeakershutOut</STRONG> (Thumb, 252 bytes, Stack size 8 bytes, x2445dk_function_ptc32.o(i.vSpeakershutOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = vSpeakershutOut &rArr; vSendBuzzerOrder &rArr; UART1_SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendBuzzerOrder
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usReadSpeakerPwm
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPWM1_Out
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralHandle
</UL>

<P><STRONG><a name="[6e]"></a>vSysSourceInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, x2445dk_init_p32.o(i.vSysSourceInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = vSysSourceInit &rArr; Uart_Init &rArr; UART_Init &rArr; System_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInitAdc
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeBaseInit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPT32
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vFirstStart
</UL>

<P><STRONG><a name="[50]"></a>vTestShowLed</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, x2445dk_function_ptc32.o(i.vTestShowLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTestShowLed &rArr; GPIO_SetBits &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralOutputHandle
</UL>

<P><STRONG><a name="[4a]"></a>vWrite60Bytes</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, x2445dk_function_ptc32.o(i.vWrite60Bytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = vWrite60Bytes &rArr; vArom_WriteBytes_Fact &rArr; EEPROM_write_n &rArr; FLASH_ProgramWord &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vArom_WriteBytes_Fact
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_PRIMASK
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripheral_GPIOInput
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralOutputHandle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeripheralInputHandle
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[70]"></a>__set_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, x2445dk_function_ptc32.o(i.__set_PRIMASK))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vWrite60Bytes
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vFirstStart
</UL>

<P><STRONG><a name="[57]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, x2445dk_init_p32.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeBaseInit
</UL>

<P><STRONG><a name="[60]"></a>__set_PRIMASK</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, x2445dk_uart_p32.o(i.__set_PRIMASK))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSendOneBytes
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSend60Bytes
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_DataProcess
</UL>

<P><STRONG><a name="[67]"></a>_printf_core</STRONG> (Thumb, 456 bytes, Stack size 88 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$3
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
